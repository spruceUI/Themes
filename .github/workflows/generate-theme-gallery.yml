name: Update Theme Gallery

on:
  workflow_dispatch:  # Manual trigger
  push:
    paths:
      - 'Themes/**'    # Triggers when changes are made in Themes directory
    branches:
      - main          # Only on main branch

jobs:
  update-readme:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for new themes
        id: check-themes
        if: github.event_name == 'push'
        run: |
          # Get list of modified files
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only HEAD^1 HEAD)
          
          # Check if any theme directories were added or removed
          THEME_CHANGED=0
          echo "$CHANGED_FILES" | while read -r file; do
            if echo "$file" | grep -q "^Themes/[^/]*/"; then
              theme_dir=$(echo "$file" | cut -d'/' -f1-2)
              theme_name="${theme_dir#Themes/}"
              
              # Check if theme was removed (directory no longer exists)
              if [ ! -d "$theme_dir" ] && grep -q "$theme_name" "README.md"; then
                THEME_CHANGED=1
                break
              fi
              
              # Check if theme is new (exists but not in README)
              if [ -d "$theme_dir" ] && ! grep -q "$theme_name" "README.md"; then
                THEME_CHANGED=1
                break
              fi
            fi
          done
          
          echo "theme_changed=$THEME_CHANGED" >> "$GITHUB_OUTPUT"

      - name: Generate Theme Gallery
        # Run if manually triggered or if themes changed
        if: github.event_name == 'workflow_dispatch' || steps.check-themes.outputs.theme_changed == '1'
        id: generate-gallery
        run: |
          # Create temporary files
          TEMP_FILE=$(mktemp)
          GALLERY_CONTENT=$(mktemp)
          
          # Generate the new gallery content
          echo -e "## Theme Gallery\n" > "$GALLERY_CONTENT"
          
          # Initialize arrays for the grid
          declare -a themes=()
          
          # Process each theme folder
          for theme_dir in Themes/*/; do
            if [ -d "$theme_dir" ] && [ "$theme_dir" != "PackedThemes/" ]; then
              theme_name="${theme_dir#Themes/}"
              theme_name="${theme_name%/}"
              preview_path_gif="$theme_dir/preview.gif"
              preview_path_png="$theme_dir/preview.png"
              packed_path="PackedThemes/$theme_name.7z"
              config_path="$theme_dir/config.json"
              
              if [ -f "$packed_path" ] && [ -f "$config_path" ] && { [ -f "$preview_path_gif" ] || [ -f "$preview_path_png" ]; }; then
                # Extract author and description from config.json
                author=$(jq -r '.author' "$config_path")
                description=$(jq -r '.description' "$config_path")
                
                # Determine which preview file to use
                if [ -f "$preview_path_gif" ]; then
                  preview_path="$preview_path_gif"
                else
                  preview_path="$preview_path_png"
                fi
                
                # Create properly encoded URLs
                preview_path=$(echo "$preview_path" | sed 's|^Themes/||')
                theme_name_encoded=$(echo "$theme_name" | sed -e 's/ /%20/g')
                
                preview_url="https://raw.githubusercontent.com/$GITHUB_REPOSITORY/main/Themes/${theme_name_encoded}/preview.png"
                preview_img="<img title=\"${theme_name}\" width=\"200px\" src=\"${preview_url}\" />"
                download_url="https://raw.githubusercontent.com/$GITHUB_REPOSITORY/main/PackedThemes/${theme_name_encoded}.7z"
                
                # Clean up URLs (remove any double slashes except after https:)
                preview_url=$(echo "$preview_url" | sed -e 's|//|/|g' -e 's|https:/|https://|')
                download_url=$(echo "$download_url" | sed -e 's|//|/|g' -e 's|https:/|https://|')
                
                # Create theme cell content
                theme_cell="<td align=\"center\" valign=\"top\" width=\"33.33%\">
                  <br/>
                  <a href=\"$download_url\">
                  $preview_img<br/>
                  <b>$theme_name</b></a><br/>
                  <small><i>$author</i></small><br/>
                  <small>$description</small><br/>
                  </td>"
                
                themes+=("$theme_cell")
              fi
            fi
          done
          
          # Output in grid format
          count=0
          total=${#themes[@]}
          
          echo "<table align=\"center\">" >> "$GALLERY_CONTENT"
          
          while [ $count -lt $total ]; do
            echo "<tr>" >> "$GALLERY_CONTENT"
            
            # Add up to 3 theme cells per row
            for i in {0..2}; do
              if [ $((count + i)) -lt $total ]; then
                echo "${themes[$((count + i))]}" >> "$GALLERY_CONTENT"
              fi
            done
            
            echo "</tr>" >> "$GALLERY_CONTENT"
            count=$((count + 3))
          done
          
          echo "</table>" >> "$GALLERY_CONTENT"
          
          # Extract content before Theme Gallery
          awk '/^## Theme Gallery/{exit} {print}' README.md > "$TEMP_FILE"
          
          # Add the new gallery content
          cat "$GALLERY_CONTENT" >> "$TEMP_FILE"
          
          # Add footer content
          echo -e "\nThemes here are in .7z format, you can place them into your Themes folder and spruce will automatically unzip them." >> "$TEMP_FILE"
          
          # Replace the original README
          mv "$TEMP_FILE" README.md

      - name: Commit and push changes
        if: github.event_name == 'workflow_dispatch' || steps.check-themes.outputs.theme_changed == '1'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update theme gallery" || exit 0
          git push
